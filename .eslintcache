[{"D:\\CS\\Death-Note\\src\\index.js":"1","D:\\CS\\Death-Note\\src\\reportWebVitals.js":"2","D:\\CS\\Death-Note\\src\\App.js":"3","D:\\CS\\Death-Note\\src\\components\\StateProvider.js":"4","D:\\CS\\Death-Note\\src\\components\\reducer.js":"5","D:\\CS\\Death-Note\\src\\components\\Navbar.js":"6","D:\\CS\\Death-Note\\src\\components\\Home.js":"7","D:\\CS\\Death-Note\\src\\components\\Categories.js":"8","D:\\CS\\Death-Note\\src\\components\\Reminder.js":"9","D:\\CS\\Death-Note\\src\\components\\SignIn.js":"10","D:\\CS\\Death-Note\\src\\Firebase.js":"11","D:\\CS\\Death-Note\\src\\components\\AddCategory.js":"12","D:\\CS\\Death-Note\\src\\components\\ExistingCategory.js":"13","D:\\CS\\Death-Note\\src\\components\\ReminderCard.js":"14","D:\\CS\\Death-Note\\src\\firebaseConfig.js":"15","D:\\CS\\Death-Note\\src\\components\\HomeSvg.js":"16","D:\\CS\\Death-Note\\src\\components\\ReminderSvg.js":"17"},{"size":853,"mtime":1607454203490,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1607454203495,"results":"20","hashOfConfig":"19"},{"size":1007,"mtime":1607585550324,"results":"21","hashOfConfig":"19"},{"size":378,"mtime":1607454203482,"results":"22","hashOfConfig":"19"},{"size":1165,"mtime":1607585165428,"results":"23","hashOfConfig":"19"},{"size":4250,"mtime":1607585165303,"results":"24","hashOfConfig":"19"},{"size":271,"mtime":1607585892090,"results":"25","hashOfConfig":"19"},{"size":759,"mtime":1607454203453,"results":"26","hashOfConfig":"19"},{"size":7108,"mtime":1607712913583,"results":"27","hashOfConfig":"19"},{"size":12605,"mtime":1607755954383,"results":"28","hashOfConfig":"19"},{"size":221,"mtime":1607755271202,"results":"29","hashOfConfig":"19"},{"size":3482,"mtime":1607454203449,"results":"30","hashOfConfig":"19"},{"size":898,"mtime":1607454203457,"results":"31","hashOfConfig":"19"},{"size":1893,"mtime":1607585165413,"results":"32","hashOfConfig":"19"},{"size":373,"mtime":1607754394492,"results":"33","hashOfConfig":"19"},{"size":18119,"mtime":1607585920648,"results":"34","hashOfConfig":"19"},{"size":22206,"mtime":1607714236195,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1w9k4ju",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\CS\\Death-Note\\src\\index.js",[],["77","78"],"D:\\CS\\Death-Note\\src\\reportWebVitals.js",[],"D:\\CS\\Death-Note\\src\\App.js",["79"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Home';\r\nimport Categories from './components/Categories';\r\nimport Reminder from './components/Reminder';\r\nimport SignIn from './components/SignIn';\r\n\r\nimport { useStateValue } from './components/StateProvider';\r\n\r\nfunction App() {\r\n\tconst [{ activeCategory }, dispatch] = useStateValue();\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t<Navbar title='Home' />\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/login'>\r\n\t\t\t\t\t<SignIn />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/categories'>\r\n\t\t\t\t\t<Navbar title='Categories' />\r\n\t\t\t\t\t<Categories />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/reminder'>\r\n\t\t\t\t\t<Navbar\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\tactiveCategory?.length ? 'Reminders' : 'Reminders'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Reminder />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","D:\\CS\\Death-Note\\src\\components\\StateProvider.js",[],"D:\\CS\\Death-Note\\src\\components\\reducer.js",[],"D:\\CS\\Death-Note\\src\\components\\Navbar.js",["80","81","82","83","84","85","86"],"import React, { useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\n\r\nfunction Navbar({title}) {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar__items\">\r\n            <MenuIcon \r\n              className=\"navbar__itemsIcon\" \r\n              onClick={handleDrawerOpen} \r\n            />\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className=\"navbar__drawer\">\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                      <div className=\"navbar__drawerIcon\">\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                      </div>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"navbar__links\" onClick={handleDrawerClose}>\r\n                  <Link to='/'>Home</Link>\r\n                  <Link to='/categories'>Categories</Link>\r\n                </div>\r\n              </div>\r\n            </Drawer>\r\n      </div>\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     <AppBar\r\n        //         position=\"fixed\"\r\n        //         className={clsx(classes.appBar, {\r\n        //         [classes.appBarShift]: open,\r\n        //         })}\r\n        //     >\r\n        //         <Toolbar>\r\n        //             <IconButton\r\n        //                 color=\"inherit\"\r\n        //                 aria-label=\"open drawer\"\r\n        //                 onClick={handleDrawerOpen}\r\n        //                 edge=\"start\"\r\n        //                 className={clsx(classes.menuButton, open && classes.hide)}\r\n        //             >\r\n        //                 <MenuIcon />\r\n        //             </IconButton>\r\n        //             <Typography variant=\"h6\" noWrap>\r\n        //                 Home\r\n        //             </Typography>\r\n        //         </Toolbar>\r\n        //     </AppBar>\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"persistent\"\r\n        //         anchor=\"left\"\r\n        //         open={open}\r\n        //         classes={{\r\n        //         paper: classes.drawerPaper,\r\n        //         }}\r\n        //     >\r\n        //         <div className={classes.drawerHeader}>\r\n        //             <IconButton onClick={handleDrawerClose}>\r\n        //                 {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        //             </IconButton>\r\n        //         </div>\r\n        //     </Drawer>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\CS\\Death-Note\\src\\components\\Home.js",[],"D:\\CS\\Death-Note\\src\\components\\Categories.js",["87","88","89"],"import React from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport './Categories.css';\r\nimport ExistingCategory from './ExistingCategory';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction Categories() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const categoriesLength = Object.keys(categories).length;\r\n\r\n    // console.log(\"length\", categoriesLength);\r\n\r\n    return (\r\n        <div \r\n            className={`${categoriesLength == 0 && \"single\"} ${categoriesLength != 0 && \"categories\"}`}\r\n        >\r\n            <AddCategory />\r\n            \r\n            {categories?.map((category) => \r\n                <ExistingCategory name={category} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","D:\\CS\\Death-Note\\src\\components\\Reminder.js",["90","91","92","93","94"],"import React, { useEffect, useState } from 'react';\r\nimport './Reminder.css';\r\n\r\nimport { useStateValue } from './StateProvider';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tTextField,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport ReminderCard from './ReminderCard';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ReminderSvg from './ReminderSvg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\tmarginBottom: '20px',\r\n\t\t//   display: 'grid',\r\n\t\t//   placeItems: 'center'\r\n\t},\r\n}));\r\n\r\nfunction Reminder() {\r\n\tconst history = useHistory();\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst [{ activeCategory, reminders }, dispatch] = useStateValue();\r\n\r\n\tconst [dialogOpen, setDialogOpen] = useState(false);\r\n\tconst [activeReminders, setActiveReminders] = useState([]);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [date, setDate] = useState('');\r\n\tconst [time, setTime] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst filterReminders = () => {\r\n\t\t\tvar items = reminders.filter(function (reminder) {\r\n\t\t\t\treturn reminder.category === activeCategory;\r\n\t\t\t});\r\n\r\n\t\t\t// console.log(items);\r\n\r\n\t\t\tsetActiveReminders(items);\r\n\t\t};\r\n\r\n\t\tfilterReminders();\r\n\t}, [reminders]);\r\n\r\n\t// console.log(activeReminders);\r\n\r\n\t// console.log(reminders);\r\n\r\n\tconst handleDialogOpen = () => {\r\n\t\tsetDialogOpen(true);\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false);\r\n\t};\r\n\r\n\t// Date format reminder match\r\n\t// console.log(new Date().toLocaleString())\r\n\r\n\tconst handleDateTime = (e) => {\r\n\t\tsetError(false);\r\n\r\n\t\tconst item = e.target.value;\r\n\r\n\t\t// 2020-12-12T17:08\r\n\t\t// console.log(item.slice(0, 10));\r\n\t\t// console.log(item.slice(11, 16));\r\n\r\n\t\tsetDate(item.slice(0, 10));\r\n\t\tsetTime(item.slice(11, 16));\r\n\t};\r\n\r\n\t// console.log(Math.floor(Math.random() * 10000) + Math.floor(Math.random() * 1000));\r\n\r\n\tconst handleReminderSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tvar randomId =\r\n\t\t\tMath.floor(Math.random() * 10000) +\r\n\t\t\tMath.floor(Math.random() * 1000);\r\n\r\n\t\tvar tempState = {\r\n\t\t\tcategory: activeCategory,\r\n\t\t\tid: randomId,\r\n\t\t\ttitle: title,\r\n\t\t\ttext: description,\r\n\t\t\ttime: time,\r\n\t\t\tdate: date,\r\n\t\t};\r\n\r\n\t\t// console.log(\"Add Reminder >>>\", tempState);\r\n\r\n\t\tif (title.length == 0 || date.length == 0 || time.length == 0) {\r\n\t\t\tsetError(true);\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'ADD_REMINDER',\r\n\t\t\t\tpayload: tempState,\r\n\t\t\t});\r\n\r\n\t\t\tsetTitle('');\r\n\t\t\tsetDescription('');\r\n\t\t\tsetDate('');\r\n\t\t\tsetTime('');\r\n\t\t\tsetDialogOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log(\"Dialog Open >>>>\", dialogOpen);\r\n\r\n\treturn (\r\n\t\t<div className='reminder'>\r\n\t\t\t{activeCategory?.length > 0 ? (\r\n\t\t\t\t<div className='reminder__container'>\r\n\t\t\t\t\t<h1>Your Reminders for {activeCategory}</h1>\r\n\r\n\t\t\t\t\t<div className='reminder__add' onClick={handleDialogOpen}>\r\n\t\t\t\t\t\t<AddCircleIcon className='reminder__addIcon' />\r\n\r\n\t\t\t\t\t\t<p className='reminder__addText'>Add new reminder</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={dialogOpen}\r\n\t\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t\t\taria-labelledby='form-dialog-title'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className='reminder__dialog'>\r\n\t\t\t\t\t\t\t<DialogTitle id='form-dialog-title'>\r\n\t\t\t\t\t\t\t\tAdd a Reminder\r\n\t\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t<form onSubmit={handleReminderSubmit}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please add a title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetTitle(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\tsetError(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetDescription(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please select date and time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tid='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Set Date and Time'\r\n\t\t\t\t\t\t\t\t\t\ttype='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\t// defaultValue=\"2017-05-24T10:30\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateTime}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='reminder__dialogButtons'>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fe5f55',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDialogClose}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#17b978',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReminderSubmit}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tadd\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Dialog>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\tactiveReminders?.length == 0 && 'reminder__noCards'\r\n\t\t\t\t\t\t} ${'reminder__cards'}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{activeReminders?.map((reminder) => (\r\n\t\t\t\t\t\t\t<ReminderCard\r\n\t\t\t\t\t\t\t\tid={reminder.id}\r\n\t\t\t\t\t\t\t\ttitle={reminder.title}\r\n\t\t\t\t\t\t\t\ttext={reminder.text}\r\n\t\t\t\t\t\t\t\ttime={reminder.time}\r\n\t\t\t\t\t\t\t\tdate={reminder.date}\r\n\t\t\t\t\t\t\t\topenDialog={handleDialogOpen}\r\n\t\t\t\t\t\t\t\t// pass delete\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='reminder__buttons'>\r\n\t\t\t\t\t\t<Tooltip title='Go To Categories' placement='right-end'>\r\n\t\t\t\t\t\t\t<KeyboardReturnIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t\tonClick={() => history.push('/categories')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\ttitle='Delete This Category'\r\n\t\t\t\t\t\t\tplacement='left-end'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DeleteIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Tooltip title='Go To Categories' placement='right-end'>\r\n\t\t\t\t\t\t<KeyboardReturnIcon\r\n\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\tonClick={() => history.push('/categories')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<ReminderSvg />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Reminder;\r\n","D:\\CS\\Death-Note\\src\\components\\SignIn.js",[],"D:\\CS\\Death-Note\\src\\Firebase.js",[],"D:\\CS\\Death-Note\\src\\components\\AddCategory.js",["95"],"import React, { useState } from 'react';\r\nimport './AddCategory.css';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nimport { DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\n\r\nfunction AddCategory() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorName, setErrorName] = useState(\"category name cannot be empty\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    // console.log(categories);\r\n    // console.log(newCategory);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setError(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setNewCategory(e.target.value);\r\n        setError(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newCategory.length !== 0){\r\n\r\n            if(categories.includes(newCategory) == false) {\r\n\r\n                dispatch({\r\n                    type: 'CREATE_CATEGORY',\r\n                    payload: newCategory\r\n                })\r\n\r\n                setNewCategory(\"\");\r\n                setOpen(false);\r\n                \r\n            } else {\r\n                setError(true); \r\n                setErrorName(\"category already defined\");\r\n            }\r\n            \r\n        } else {\r\n            setError(true);\r\n            setErrorName(\"category name cannot be empty\")\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"addCategory\">\r\n            <div className=\"addCategory__items\">\r\n                <div className=\"addCategory__itemsIcon\">\r\n                    <AddCircleOutlineIcon onClick={handleOpen} />\r\n                </div>\r\n                \r\n                <p>Add New Category</p>\r\n\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <div className=\"dialog\">\r\n                        <DialogTitle id=\"form-dialog-title\">Create New Category</DialogTitle>\r\n                        <DialogContent>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    error={error}\r\n                                    helperText={error? errorName : null}\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    label=\"Category Name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    value={newCategory}\r\n                                    onChange={handleChange}\r\n                                />\r\n\r\n                                <div className=\"dialog__buttons\">\r\n                                    <button style={{backgroundColor: \"#fe5f55\", }} type=\"button\" onClick={handleClose}>close</button>\r\n                                    <button style={{backgroundColor: \"#17b978\", }} type=\"submit\" onClick={handleSubmit}>create</button>\r\n                                </div>\r\n                            </form>\r\n                        </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","D:\\CS\\Death-Note\\src\\components\\ExistingCategory.js",["96"],"import React from 'react';\r\nimport './ExistingCategory.css';\r\n\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction ExistingCategory({name}) {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const history = useHistory();\r\n    \r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: 'ACTIVE_CATEGORY',\r\n            payload: name\r\n        });\r\n\r\n        history.push('/reminder')\r\n    };\r\n\r\n    return (\r\n        <div className=\"exCategory\" onClick={handleClick}>\r\n            <div className=\"exCategory__items\">\r\n                <div className=\"exCategory__itemsIcon\">\r\n                    <CategoryIcon />\r\n                </div>\r\n                \r\n                <p>{name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExistingCategory\r\n","D:\\CS\\Death-Note\\src\\components\\ReminderCard.js",[],"D:\\CS\\Death-Note\\src\\firebaseConfig.js",[],"D:\\CS\\Death-Note\\src\\components\\HomeSvg.js",[],"D:\\CS\\Death-Note\\src\\components\\ReminderSvg.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":14,"column":29,"nodeType":"103","messageId":"104","endLine":14,"endColumn":37},{"ruleId":"101","severity":1,"message":"105","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":12},{"ruleId":"101","severity":1,"message":"106","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"101","severity":1,"message":"107","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":14},{"ruleId":"101","severity":1,"message":"108","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":15},{"ruleId":"101","severity":1,"message":"109","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":18},{"ruleId":"101","severity":1,"message":"111","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":10,"column":26,"nodeType":"103","messageId":"104","endLine":10,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":18,"column":44,"nodeType":"114","messageId":"115","endLine":18,"endColumn":46},{"ruleId":"112","severity":1,"message":"116","line":18,"column":81,"nodeType":"114","messageId":"115","endLine":18,"endColumn":83},{"ruleId":"117","severity":1,"message":"118","line":58,"column":5,"nodeType":"119","endLine":58,"endColumn":16,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"113","line":108,"column":20,"nodeType":"114","messageId":"115","endLine":108,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":108,"column":40,"nodeType":"114","messageId":"115","endLine":108,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":108,"column":60,"nodeType":"114","messageId":"115","endLine":108,"endColumn":62},{"ruleId":"112","severity":1,"message":"113","line":243,"column":32,"nodeType":"114","messageId":"115","endLine":243,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":42,"column":49,"nodeType":"114","messageId":"115","endLine":42,"endColumn":51},{"ruleId":"121","severity":1,"message":"122","line":11,"column":12,"nodeType":"123","messageId":"115","endLine":11,"endColumn":14},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeCategory'. Either include it or remove the dependency array.","ArrayExpression",["126"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [activeCategory, reminders]",{"range":"129","text":"130"},[1569,1580],"[activeCategory, reminders]"]
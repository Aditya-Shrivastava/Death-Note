[{"D:\\CS\\Death-Note\\src\\index.js":"1","D:\\CS\\Death-Note\\src\\reportWebVitals.js":"2","D:\\CS\\Death-Note\\src\\App.js":"3","D:\\CS\\Death-Note\\src\\components\\StateProvider.js":"4","D:\\CS\\Death-Note\\src\\components\\reducer.js":"5","D:\\CS\\Death-Note\\src\\components\\Navbar.js":"6","D:\\CS\\Death-Note\\src\\components\\Home.js":"7","D:\\CS\\Death-Note\\src\\components\\Categories.js":"8","D:\\CS\\Death-Note\\src\\components\\Reminder.js":"9","D:\\CS\\Death-Note\\src\\components\\SignIn.js":"10","D:\\CS\\Death-Note\\src\\Firebase.js":"11","D:\\CS\\Death-Note\\src\\components\\AddCategory.js":"12","D:\\CS\\Death-Note\\src\\components\\ExistingCategory.js":"13","D:\\CS\\Death-Note\\src\\components\\ReminderCard.js":"14","D:\\CS\\Death-Note\\src\\firebaseConfig.js":"15"},{"size":853,"mtime":1607454203490,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1607454203495,"results":"18","hashOfConfig":"17"},{"size":1665,"mtime":1607585165829,"results":"19","hashOfConfig":"17"},{"size":378,"mtime":1607454203482,"results":"20","hashOfConfig":"17"},{"size":1165,"mtime":1607585165428,"results":"21","hashOfConfig":"17"},{"size":4250,"mtime":1607585165303,"results":"22","hashOfConfig":"17"},{"size":11930,"mtime":1607456277106,"results":"23","hashOfConfig":"17"},{"size":759,"mtime":1607454203453,"results":"24","hashOfConfig":"17"},{"size":9651,"mtime":1607585165363,"results":"25","hashOfConfig":"17"},{"size":12829,"mtime":1607585165573,"results":"26","hashOfConfig":"17"},{"size":191,"mtime":1607454398472,"results":"27","hashOfConfig":"17"},{"size":3482,"mtime":1607454203449,"results":"28","hashOfConfig":"17"},{"size":898,"mtime":1607454203457,"results":"29","hashOfConfig":"17"},{"size":1893,"mtime":1607585165413,"results":"30","hashOfConfig":"17"},{"size":436,"mtime":1607454407671,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w9k4ju",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\CS\\Death-Note\\src\\index.js",[],["68","69"],"D:\\CS\\Death-Note\\src\\reportWebVitals.js",[],"D:\\CS\\Death-Note\\src\\App.js",["70"],"D:\\CS\\Death-Note\\src\\components\\StateProvider.js",[],"D:\\CS\\Death-Note\\src\\components\\reducer.js",[],"D:\\CS\\Death-Note\\src\\components\\Navbar.js",["71","72","73","74","75","76","77"],"import React, { useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\n\r\nfunction Navbar({title}) {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar__items\">\r\n            <MenuIcon \r\n              className=\"navbar__itemsIcon\" \r\n              onClick={handleDrawerOpen} \r\n            />\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className=\"navbar__drawer\">\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                      <div className=\"navbar__drawerIcon\">\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                      </div>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"navbar__links\" onClick={handleDrawerClose}>\r\n                  <Link to='/'>Home</Link>\r\n                  <Link to='/categories'>Categories</Link>\r\n                </div>\r\n              </div>\r\n            </Drawer>\r\n      </div>\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     <AppBar\r\n        //         position=\"fixed\"\r\n        //         className={clsx(classes.appBar, {\r\n        //         [classes.appBarShift]: open,\r\n        //         })}\r\n        //     >\r\n        //         <Toolbar>\r\n        //             <IconButton\r\n        //                 color=\"inherit\"\r\n        //                 aria-label=\"open drawer\"\r\n        //                 onClick={handleDrawerOpen}\r\n        //                 edge=\"start\"\r\n        //                 className={clsx(classes.menuButton, open && classes.hide)}\r\n        //             >\r\n        //                 <MenuIcon />\r\n        //             </IconButton>\r\n        //             <Typography variant=\"h6\" noWrap>\r\n        //                 Home\r\n        //             </Typography>\r\n        //         </Toolbar>\r\n        //     </AppBar>\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"persistent\"\r\n        //         anchor=\"left\"\r\n        //         open={open}\r\n        //         classes={{\r\n        //         paper: classes.drawerPaper,\r\n        //         }}\r\n        //     >\r\n        //         <div className={classes.drawerHeader}>\r\n        //             <IconButton onClick={handleDrawerClose}>\r\n        //                 {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        //             </IconButton>\r\n        //         </div>\r\n        //     </Drawer>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\CS\\Death-Note\\src\\components\\Home.js",[],"D:\\CS\\Death-Note\\src\\components\\Categories.js",["78","79","80"],"import React from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport './Categories.css';\r\nimport ExistingCategory from './ExistingCategory';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction Categories() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const categoriesLength = Object.keys(categories).length;\r\n\r\n    // console.log(\"length\", categoriesLength);\r\n\r\n    return (\r\n        <div \r\n            className={`${categoriesLength == 0 && \"single\"} ${categoriesLength != 0 && \"categories\"}`}\r\n        >\r\n            <AddCategory />\r\n            \r\n            {categories?.map((category) => \r\n                <ExistingCategory name={category} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","D:\\CS\\Death-Note\\src\\components\\Reminder.js",["81","82","83","84","85"],"import React, { useEffect, useState } from 'react';\r\nimport './Reminder.css';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { DialogContent, DialogTitle, TextField, Tooltip } from '@material-ui/core';\r\n\r\nimport ReminderCard from './ReminderCard';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n      marginBottom: '20px',\r\n    //   display: 'grid',\r\n    //   placeItems: 'center'\r\n    },\r\n}));\r\n\r\n\r\nfunction Reminder() {\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [{activeCategory, reminders}, dispatch] = useStateValue();\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [activeReminders, setActiveReminders] = useState([]);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [nowDateTime, setNowDateTime] = useState(\"\");\r\n\r\n    // console.log(reminders);\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const todayTime = () => {\r\n        // set current date and time to provide in maui datetime\r\n        // setNowDateTime()\r\n    };\r\n\r\n    // console.log(nowDateTime);\r\n\r\n    useEffect(() => {\r\n        const filterReminders = () => {\r\n            var items = reminders.filter(function(reminder) {\r\n                return reminder.category === activeCategory;\r\n            })\r\n\r\n            // console.log(items);\r\n\r\n            setActiveReminders(items);\r\n        }\r\n\r\n        filterReminders();\r\n        todayTime();\r\n    }, [])\r\n\r\n    console.log(activeReminders);\r\n\r\n    const handleReminderSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"Title>>>\", title);\r\n        console.log(\"Desc>>>\", description);\r\n\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    // console.log(\"Dialog Open >>>>\", dialogOpen);\r\n\r\n    return (\r\n        <div className=\"reminder\">\r\n            {\r\n                activeCategory?.length > 0 ? (\r\n                    <div className=\"reminder__container\">\r\n                        <h1>Your Reminders for {activeCategory}</h1>\r\n\r\n                        <div className=\"reminder__add\" onClick={handleDialogOpen}>\r\n                            <AddCircleIcon className=\"reminder__addIcon\"/>\r\n\r\n                            <p className=\"reminder__addText\">Add new reminder</p>\r\n                        </div>\r\n\r\n                        <Dialog open={dialogOpen} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\r\n                            <div className=\"reminder__dialog\">\r\n                                <DialogTitle id=\"form-dialog-title\">Add a Reminder</DialogTitle>\r\n                                <DialogContent>\r\n                                    <form onSubmit={handleReminderSubmit}>\r\n                                        <TextField \r\n                                            helperText={null}\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            label=\"Title\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            value={title}\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n\r\n                                        <TextField \r\n                                            helperText={null}\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            label=\"Description\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            id=\"datetime-local\"\r\n                                            label=\"Set Date and Time\"\r\n                                            type=\"datetime-local\"\r\n                                            // defaultValue=\"2017-05-24T10:30\"\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            onChange={(e) => console.log(e.target.value)}\r\n                                        />\r\n\r\n                                        <div className=\"reminder__dialogButtons\">\r\n                                            <button style={{backgroundColor: \"#fe5f55\", }} type=\"button\" onClick={handleDialogClose}>close</button>\r\n                                            <button style={{backgroundColor: \"#17b978\", }} type=\"submit\" onClick={handleReminderSubmit}>add</button>\r\n                                        </div>\r\n\r\n                                    </form>\r\n                                </DialogContent>\r\n                            </div>\r\n                        </Dialog>\r\n\r\n                        <div className={`${activeReminders?.length == 0 && \"reminder__noCards\"} ${\"reminder__cards\"}`}>\r\n                            {activeReminders?.map((reminder) => (\r\n                                <ReminderCard \r\n                                    id = {reminder.id}\r\n                                    title = {reminder.title}\r\n                                    text = {reminder.text}\r\n                                    time = {reminder.time}\r\n                                    date = {reminder.date}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"reminder__buttons\">\r\n                        <Tooltip title=\"Go To Categories\" placement=\"right-end\">\r\n                            <KeyboardReturnIcon \r\n                                style={{color: \"#3a3d44\", }} \r\n                                onClick={() => history.push('/categories')} \r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete This Category\" placement=\"left-end\">\r\n                            <DeleteIcon \r\n                                style={{color: \"#3a3d44\", }} \r\n                            />\r\n                        </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <h1>No Category Selected</h1>\r\n                )\r\n            }\r\n               \r\n\r\n                \r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Reminder\r\n\r\n\r\n\r\n","D:\\CS\\Death-Note\\src\\components\\SignIn.js",[],"D:\\CS\\Death-Note\\src\\Firebase.js",[],"D:\\CS\\Death-Note\\src\\components\\AddCategory.js",["86"],"import React, { useState } from 'react';\r\nimport './AddCategory.css';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nimport { DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\n\r\nfunction AddCategory() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorName, setErrorName] = useState(\"category name cannot be empty\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    // console.log(categories);\r\n    // console.log(newCategory);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setError(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setNewCategory(e.target.value);\r\n        setError(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newCategory.length !== 0){\r\n\r\n            if(categories.includes(newCategory) == false) {\r\n\r\n                dispatch({\r\n                    type: 'CREATE_CATEGORY',\r\n                    payload: newCategory\r\n                })\r\n\r\n                setNewCategory(\"\");\r\n                setOpen(false);\r\n                \r\n            } else {\r\n                setError(true); \r\n                setErrorName(\"category already defined\");\r\n            }\r\n            \r\n        } else {\r\n            setError(true);\r\n            setErrorName(\"category name cannot be empty\")\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"addCategory\">\r\n            <div className=\"addCategory__items\">\r\n                <div className=\"addCategory__itemsIcon\">\r\n                    <AddCircleOutlineIcon onClick={handleOpen} />\r\n                </div>\r\n                \r\n                <p>Add New Category</p>\r\n\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <div className=\"dialog\">\r\n                        <DialogTitle id=\"form-dialog-title\">Create New Category</DialogTitle>\r\n                        <DialogContent>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    error={error}\r\n                                    helperText={error? errorName : null}\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    label=\"Category Name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    value={newCategory}\r\n                                    onChange={handleChange}\r\n                                />\r\n\r\n                                <div className=\"dialog__buttons\">\r\n                                    <button style={{backgroundColor: \"#fe5f55\", }} type=\"button\" onClick={handleClose}>close</button>\r\n                                    <button style={{backgroundColor: \"#17b978\", }} type=\"submit\" onClick={handleSubmit}>create</button>\r\n                                </div>\r\n                            </form>\r\n                        </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","D:\\CS\\Death-Note\\src\\components\\ExistingCategory.js",["87"],"import React from 'react';\r\nimport './ExistingCategory.css';\r\n\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction ExistingCategory({name}) {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const history = useHistory();\r\n    \r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: 'ACTIVE_CATEGORY',\r\n            payload: name\r\n        });\r\n\r\n        history.push('/reminder')\r\n    };\r\n\r\n    return (\r\n        <div className=\"exCategory\" onClick={handleClick}>\r\n            <div className=\"exCategory__items\">\r\n                <div className=\"exCategory__itemsIcon\">\r\n                    <CategoryIcon />\r\n                </div>\r\n                \r\n                <p>{name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExistingCategory\r\n","D:\\CS\\Death-Note\\src\\components\\ReminderCard.js",[],"D:\\CS\\Death-Note\\src\\firebaseConfig.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":null,"fatal":true,"severity":2,"message":"92","line":16,"column":2},{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":19},{"ruleId":"93","severity":1,"message":"98","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":14},{"ruleId":"93","severity":1,"message":"99","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":15},{"ruleId":"93","severity":1,"message":"100","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":12},{"ruleId":"93","severity":1,"message":"101","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":18},{"ruleId":"93","severity":1,"message":"102","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":15},{"ruleId":"93","severity":1,"message":"103","line":10,"column":26,"nodeType":"95","messageId":"96","endLine":10,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":18,"column":44,"nodeType":"106","messageId":"107","endLine":18,"endColumn":46},{"ruleId":"104","severity":1,"message":"108","line":18,"column":81,"nodeType":"106","messageId":"107","endLine":18,"endColumn":83},{"ruleId":"93","severity":1,"message":"103","line":31,"column":41,"nodeType":"95","messageId":"96","endLine":31,"endColumn":49},{"ruleId":"93","severity":1,"message":"109","line":37,"column":12,"nodeType":"95","messageId":"96","endLine":37,"endColumn":23},{"ruleId":"93","severity":1,"message":"110","line":37,"column":25,"nodeType":"95","messageId":"96","endLine":37,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":69,"column":8,"nodeType":"113","endLine":69,"endColumn":10,"suggestions":"114"},{"ruleId":"104","severity":1,"message":"105","line":150,"column":68,"nodeType":"106","messageId":"107","endLine":150,"endColumn":70},{"ruleId":"104","severity":1,"message":"105","line":42,"column":49,"nodeType":"106","messageId":"107","endLine":42,"endColumn":51},{"ruleId":"115","severity":1,"message":"116","line":11,"column":12,"nodeType":"117","messageId":"107","endLine":11,"endColumn":14},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 14 | \u001b[39m\t\u001b[36mconst\u001b[39m [{ activeCategory }\u001b[33m,\u001b[39m dispatch] \u001b[33m=\u001b[39m useStateValue()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m\t\u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\t\t\u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'app'\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\t\t\t\u001b[33m<\u001b[39m\u001b[33mSwitch\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'nowDateTime' is assigned a value but never used.","'setNowDateTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeCategory' and 'reminders'. Either include them or remove the dependency array.","ArrayExpression",["120"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [activeCategory, reminders]",{"range":"123","text":"124"},[1937,1939],"[activeCategory, reminders]"]
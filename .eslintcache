[{"D:\\work\\web_dev\\notebook\\src\\index.js":"1","D:\\work\\web_dev\\notebook\\src\\reportWebVitals.js":"2","D:\\work\\web_dev\\notebook\\src\\App.js":"3","D:\\work\\web_dev\\notebook\\src\\components\\Home.js":"4","D:\\work\\web_dev\\notebook\\src\\components\\Navbar.js":"5","D:\\work\\web_dev\\notebook\\src\\components\\Categories.js":"6","D:\\work\\web_dev\\notebook\\src\\components\\AddCategory.js":"7","D:\\work\\web_dev\\notebook\\src\\components\\StateProvider.js":"8","D:\\work\\web_dev\\notebook\\src\\components\\reducer.js":"9","D:\\work\\web_dev\\notebook\\src\\components\\ExistingCategory.js":"10"},{"size":824,"mtime":1607318276196,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":574,"mtime":1607263371902,"results":"14","hashOfConfig":"12"},{"size":193,"mtime":1607309401476,"results":"15","hashOfConfig":"12"},{"size":5423,"mtime":1607311198757,"results":"16","hashOfConfig":"12"},{"size":755,"mtime":1607336828216,"results":"17","hashOfConfig":"12"},{"size":3375,"mtime":1607334926975,"results":"18","hashOfConfig":"12"},{"size":378,"mtime":1607318043293,"results":"19","hashOfConfig":"12"},{"size":913,"mtime":1607354260071,"results":"20","hashOfConfig":"12"},{"size":559,"mtime":1607337421271,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16kts6r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\work\\web_dev\\notebook\\src\\index.js",[],["46","47"],"D:\\work\\web_dev\\notebook\\src\\reportWebVitals.js",[],"D:\\work\\web_dev\\notebook\\src\\App.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\Home.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\Navbar.js",["48","49","50","51","52","53","54"],"import React, { useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\n\r\nfunction Navbar({title}) {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar__items\">\r\n            <MenuIcon \r\n              className=\"navbar__itemsIcon\" \r\n              onClick={handleDrawerOpen} \r\n            />\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className=\"navbar__drawer\">\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                      <div className=\"navbar__drawerIcon\">\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                      </div>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"navbar__links\" onClick={handleDrawerClose}>\r\n                  <Link to='/'>Home</Link>\r\n                  <Link to='/categories'>Categories</Link>\r\n                </div>\r\n              </div>\r\n            </Drawer>\r\n      </div>\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     <AppBar\r\n        //         position=\"fixed\"\r\n        //         className={clsx(classes.appBar, {\r\n        //         [classes.appBarShift]: open,\r\n        //         })}\r\n        //     >\r\n        //         <Toolbar>\r\n        //             <IconButton\r\n        //                 color=\"inherit\"\r\n        //                 aria-label=\"open drawer\"\r\n        //                 onClick={handleDrawerOpen}\r\n        //                 edge=\"start\"\r\n        //                 className={clsx(classes.menuButton, open && classes.hide)}\r\n        //             >\r\n        //                 <MenuIcon />\r\n        //             </IconButton>\r\n        //             <Typography variant=\"h6\" noWrap>\r\n        //                 Home\r\n        //             </Typography>\r\n        //         </Toolbar>\r\n        //     </AppBar>\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"persistent\"\r\n        //         anchor=\"left\"\r\n        //         open={open}\r\n        //         classes={{\r\n        //         paper: classes.drawerPaper,\r\n        //         }}\r\n        //     >\r\n        //         <div className={classes.drawerHeader}>\r\n        //             <IconButton onClick={handleDrawerClose}>\r\n        //                 {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        //             </IconButton>\r\n        //         </div>\r\n        //     </Drawer>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\work\\web_dev\\notebook\\src\\components\\Categories.js",["55","56","57"],"import React from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport './Categories.css';\r\nimport ExistingCategory from './ExistingCategory';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction Categories() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const categoriesLength = Object.keys(categories).length;\r\n\r\n    console.log(\"length\", categoriesLength);\r\n\r\n    return (\r\n        <div \r\n            className={`${categoriesLength == 0 && \"single\"} ${categoriesLength != 0 && \"categories\"}`}\r\n        >\r\n            <AddCategory />\r\n            \r\n            {categories.map((category) => \r\n                <ExistingCategory name={category} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","D:\\work\\web_dev\\notebook\\src\\components\\AddCategory.js",["58"],"import React, { useState } from 'react';\r\nimport './AddCategory.css';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nimport { DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\n\r\nfunction AddCategory() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorName, setErrorName] = useState(\"category name cannot be empty\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    console.log(categories);\r\n    // console.log(newCategory);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setNewCategory(e.target.value);\r\n        setError(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newCategory.length !== 0){\r\n\r\n            if(categories.includes(newCategory) == false) {\r\n\r\n                dispatch({\r\n                    type: 'CREATE_CATEGORY',\r\n                    payload: newCategory\r\n                })\r\n\r\n                setNewCategory(\"\");\r\n                setOpen(false);\r\n                \r\n            } else {\r\n                setError(true); \r\n                setErrorName(\"category already defined\");\r\n            }\r\n            \r\n        } else {\r\n            setError(true);\r\n            setErrorName(\"category name cannot be empty\")\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"addCategory\">\r\n            <div className=\"addCategory__items\">\r\n                <div className=\"addCategory__itemsIcon\">\r\n                    <AddCircleOutlineIcon onClick={handleOpen} />\r\n                </div>\r\n                \r\n                <p>Add New Category</p>\r\n\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <div className=\"dialog\">\r\n                        <DialogTitle id=\"form-dialog-title\">Create New Category</DialogTitle>\r\n                        <DialogContent>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    error={error}\r\n                                    helperText={error? errorName : null}\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    label=\"Category Name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    value={newCategory}\r\n                                    onChange={handleChange}\r\n                                />\r\n\r\n                                <div className=\"dialog__buttons\">\r\n                                    <button type=\"button\" onClick={handleClose}>close</button>\r\n                                    <button type=\"submit\" onClick={handleSubmit}>create</button>\r\n                                </div>\r\n                            </form>\r\n                        </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","D:\\work\\web_dev\\notebook\\src\\components\\StateProvider.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\reducer.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\ExistingCategory.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":19},{"ruleId":"63","severity":1,"message":"68","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":9,"column":8,"nodeType":"65","messageId":"66","endLine":9,"endColumn":15},{"ruleId":"63","severity":1,"message":"70","line":10,"column":8,"nodeType":"65","messageId":"66","endLine":10,"endColumn":12},{"ruleId":"63","severity":1,"message":"71","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":18},{"ruleId":"63","severity":1,"message":"72","line":12,"column":8,"nodeType":"65","messageId":"66","endLine":12,"endColumn":15},{"ruleId":"63","severity":1,"message":"73","line":10,"column":26,"nodeType":"65","messageId":"66","endLine":10,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":18,"column":44,"nodeType":"76","messageId":"77","endLine":18,"endColumn":46},{"ruleId":"74","severity":1,"message":"78","line":18,"column":81,"nodeType":"76","messageId":"77","endLine":18,"endColumn":83},{"ruleId":"74","severity":1,"message":"75","line":41,"column":49,"nodeType":"76","messageId":"77","endLine":41,"endColumn":51},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]
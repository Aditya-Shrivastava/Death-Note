[{"D:\\work\\web_dev\\notebook\\src\\index.js":"1","D:\\work\\web_dev\\notebook\\src\\reportWebVitals.js":"2","D:\\work\\web_dev\\notebook\\src\\App.js":"3","D:\\work\\web_dev\\notebook\\src\\components\\Home.js":"4","D:\\work\\web_dev\\notebook\\src\\components\\Navbar.js":"5","D:\\work\\web_dev\\notebook\\src\\components\\Categories.js":"6","D:\\work\\web_dev\\notebook\\src\\components\\AddCategory.js":"7","D:\\work\\web_dev\\notebook\\src\\components\\StateProvider.js":"8","D:\\work\\web_dev\\notebook\\src\\components\\reducer.js":"9","D:\\work\\web_dev\\notebook\\src\\components\\ExistingCategory.js":"10","D:\\work\\web_dev\\notebook\\src\\components\\Reminder.js":"11","D:\\work\\web_dev\\notebook\\src\\components\\ReminderCard.js":"12"},{"size":824,"mtime":1607318276196,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":894,"mtime":1607394593003,"results":"16","hashOfConfig":"14"},{"size":193,"mtime":1607430494105,"results":"17","hashOfConfig":"14"},{"size":5423,"mtime":1607311198757,"results":"18","hashOfConfig":"14"},{"size":759,"mtime":1607395031374,"results":"19","hashOfConfig":"14"},{"size":3482,"mtime":1607399497927,"results":"20","hashOfConfig":"14"},{"size":378,"mtime":1607318043293,"results":"21","hashOfConfig":"14"},{"size":2512,"mtime":1607428133781,"results":"22","hashOfConfig":"14"},{"size":898,"mtime":1607360533300,"results":"23","hashOfConfig":"14"},{"size":7493,"mtime":1607429207021,"results":"24","hashOfConfig":"14"},{"size":1076,"mtime":1607427948191,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16kts6r",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\web_dev\\notebook\\src\\index.js",[],["56","57"],"D:\\work\\web_dev\\notebook\\src\\reportWebVitals.js",[],"D:\\work\\web_dev\\notebook\\src\\App.js",["58"],"import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Categories from './components/Categories'\nimport Reminder from './components/Reminder';\n\nimport {useStateValue} from './components/StateProvider';\n\nfunction App() {\n\n  const [{activeCategory}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar title=\"Home\" />\n          <Home />\n        </Route>\n        <Route exact path=\"/categories\">\n          <Navbar title=\"Categories\" />\n          <Categories />\n        </Route>\n        <Route exact path=\"/reminder\">\n          <Navbar title={activeCategory?.length? \"Reminders\": \"Reminders\"} />\n          <Reminder />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\work\\web_dev\\notebook\\src\\components\\Home.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\Navbar.js",["59","60","61","62","63","64","65"],"import React, { useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\n\r\nfunction Navbar({title}) {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar__items\">\r\n            <MenuIcon \r\n              className=\"navbar__itemsIcon\" \r\n              onClick={handleDrawerOpen} \r\n            />\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className=\"navbar__drawer\">\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                      <div className=\"navbar__drawerIcon\">\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                      </div>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"navbar__links\" onClick={handleDrawerClose}>\r\n                  <Link to='/'>Home</Link>\r\n                  <Link to='/categories'>Categories</Link>\r\n                </div>\r\n              </div>\r\n            </Drawer>\r\n      </div>\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     <AppBar\r\n        //         position=\"fixed\"\r\n        //         className={clsx(classes.appBar, {\r\n        //         [classes.appBarShift]: open,\r\n        //         })}\r\n        //     >\r\n        //         <Toolbar>\r\n        //             <IconButton\r\n        //                 color=\"inherit\"\r\n        //                 aria-label=\"open drawer\"\r\n        //                 onClick={handleDrawerOpen}\r\n        //                 edge=\"start\"\r\n        //                 className={clsx(classes.menuButton, open && classes.hide)}\r\n        //             >\r\n        //                 <MenuIcon />\r\n        //             </IconButton>\r\n        //             <Typography variant=\"h6\" noWrap>\r\n        //                 Home\r\n        //             </Typography>\r\n        //         </Toolbar>\r\n        //     </AppBar>\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"persistent\"\r\n        //         anchor=\"left\"\r\n        //         open={open}\r\n        //         classes={{\r\n        //         paper: classes.drawerPaper,\r\n        //         }}\r\n        //     >\r\n        //         <div className={classes.drawerHeader}>\r\n        //             <IconButton onClick={handleDrawerClose}>\r\n        //                 {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        //             </IconButton>\r\n        //         </div>\r\n        //     </Drawer>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\work\\web_dev\\notebook\\src\\components\\Categories.js",["66","67","68"],"import React from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport './Categories.css';\r\nimport ExistingCategory from './ExistingCategory';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction Categories() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const categoriesLength = Object.keys(categories).length;\r\n\r\n    // console.log(\"length\", categoriesLength);\r\n\r\n    return (\r\n        <div \r\n            className={`${categoriesLength == 0 && \"single\"} ${categoriesLength != 0 && \"categories\"}`}\r\n        >\r\n            <AddCategory />\r\n            \r\n            {categories?.map((category) => \r\n                <ExistingCategory name={category} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","D:\\work\\web_dev\\notebook\\src\\components\\AddCategory.js",["69"],"import React, { useState } from 'react';\r\nimport './AddCategory.css';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nimport { DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\n\r\nfunction AddCategory() {\r\n\r\n    const [{categories}, dispatch] = useStateValue();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorName, setErrorName] = useState(\"category name cannot be empty\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    // console.log(categories);\r\n    // console.log(newCategory);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setError(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setNewCategory(e.target.value);\r\n        setError(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newCategory.length !== 0){\r\n\r\n            if(categories.includes(newCategory) == false) {\r\n\r\n                dispatch({\r\n                    type: 'CREATE_CATEGORY',\r\n                    payload: newCategory\r\n                })\r\n\r\n                setNewCategory(\"\");\r\n                setOpen(false);\r\n                \r\n            } else {\r\n                setError(true); \r\n                setErrorName(\"category already defined\");\r\n            }\r\n            \r\n        } else {\r\n            setError(true);\r\n            setErrorName(\"category name cannot be empty\")\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"addCategory\">\r\n            <div className=\"addCategory__items\">\r\n                <div className=\"addCategory__itemsIcon\">\r\n                    <AddCircleOutlineIcon onClick={handleOpen} />\r\n                </div>\r\n                \r\n                <p>Add New Category</p>\r\n\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <div className=\"dialog\">\r\n                        <DialogTitle id=\"form-dialog-title\">Create New Category</DialogTitle>\r\n                        <DialogContent>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    error={error}\r\n                                    helperText={error? errorName : null}\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    label=\"Category Name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    value={newCategory}\r\n                                    onChange={handleChange}\r\n                                />\r\n\r\n                                <div className=\"dialog__buttons\">\r\n                                    <button style={{backgroundColor: \"#fe5f55\", }} type=\"button\" onClick={handleClose}>close</button>\r\n                                    <button style={{backgroundColor: \"#17b978\", }} type=\"submit\" onClick={handleSubmit}>create</button>\r\n                                </div>\r\n                            </form>\r\n                        </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","D:\\work\\web_dev\\notebook\\src\\components\\StateProvider.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\reducer.js",[],"D:\\work\\web_dev\\notebook\\src\\components\\ExistingCategory.js",["70"],"import React from 'react';\r\nimport './ExistingCategory.css';\r\n\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction ExistingCategory({name}) {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const history = useHistory();\r\n    \r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: 'ACTIVE_CATEGORY',\r\n            payload: name\r\n        });\r\n\r\n        history.push('/reminder')\r\n    };\r\n\r\n    return (\r\n        <div className=\"exCategory\" onClick={handleClick}>\r\n            <div className=\"exCategory__items\">\r\n                <div className=\"exCategory__itemsIcon\">\r\n                    <CategoryIcon />\r\n                </div>\r\n                \r\n                <p>{name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExistingCategory\r\n","D:\\work\\web_dev\\notebook\\src\\components\\Reminder.js",["71","72","73","74","75"],"D:\\work\\web_dev\\notebook\\src\\components\\ReminderCard.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":14,"column":28,"nodeType":"82","messageId":"83","endLine":14,"endColumn":36},{"ruleId":"80","severity":1,"message":"84","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"85","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":19},{"ruleId":"80","severity":1,"message":"86","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"87","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},{"ruleId":"80","severity":1,"message":"88","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":12},{"ruleId":"80","severity":1,"message":"89","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":18},{"ruleId":"80","severity":1,"message":"90","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":10,"column":26,"nodeType":"82","messageId":"83","endLine":10,"endColumn":34},{"ruleId":"91","severity":1,"message":"92","line":18,"column":44,"nodeType":"93","messageId":"94","endLine":18,"endColumn":46},{"ruleId":"91","severity":1,"message":"95","line":18,"column":81,"nodeType":"93","messageId":"94","endLine":18,"endColumn":83},{"ruleId":"91","severity":1,"message":"92","line":42,"column":49,"nodeType":"93","messageId":"94","endLine":42,"endColumn":51},{"ruleId":"96","severity":1,"message":"97","line":11,"column":12,"nodeType":"98","messageId":"94","endLine":11,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":31,"column":41,"nodeType":"82","messageId":"83","endLine":31,"endColumn":49},{"ruleId":"80","severity":1,"message":"99","line":37,"column":12,"nodeType":"82","messageId":"83","endLine":37,"endColumn":23},{"ruleId":"80","severity":1,"message":"100","line":37,"column":25,"nodeType":"82","messageId":"83","endLine":37,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":69,"column":8,"nodeType":"103","endLine":69,"endColumn":10,"suggestions":"104"},{"ruleId":"91","severity":1,"message":"92","line":150,"column":68,"nodeType":"93","messageId":"94","endLine":150,"endColumn":70},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'nowDateTime' is assigned a value but never used.","'setNowDateTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeCategory' and 'reminders'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [activeCategory, reminders]",{"range":"110","text":"111"},[1937,1939],"[activeCategory, reminders]"]